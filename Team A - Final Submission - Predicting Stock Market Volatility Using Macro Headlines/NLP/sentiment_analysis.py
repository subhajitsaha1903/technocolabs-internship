# -*- coding: utf-8 -*-
"""sentiment_analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_PVDGdG4u81acm--IRcM6QcX6hQFfDub
"""

import re
import pandas as pd
import numpy as np

"""Cleaning and preprocessing"""

twitter_data= pd.read_csv('final_twitterdata_6months/AAPL.csv')
twitter_data['Datetime']=twitter_data.Datetime.map(lambda p: (str(p).split(" "))[0])
twitter_data.rename(columns = {'Datetime':'Date'}, inplace = True)
df_copy = twitter_data
df_copy

df_copy=df_copy.dropna()
df_copy

df_copy['Date'] = pd.to_datetime(df_copy['Date'], errors='coerce')
df_copy['Date'] = df_copy['Date'].apply(lambda x: x.strftime('%Y-%m-%d')if not pd.isnull(x) else '')
df_copy.dropna(inplace=True)

import re
df_copy['Text']=df_copy['Text'].apply(str).str.lower()

# Convert text to lowercase
    #data['review'] = data['review'].str.strip().str.lower()
    
for i in range(len(df_copy)):
    txt = df_copy.iloc[i]["Text"]
    txt=re.sub(r'@[A-Z0-9a-z_:]+','',txt)#replace username-tags
    txt=re.sub(r'^[RT]+','',txt)#replace RT-tags
    txt = re.sub('https?://[A-Za-z0-9./]+','',txt)#replace URLs
    txt=re.sub("[^a-zA-Z]", " ",txt)#replace hashtags
    df_copy.at[i,"Text"]=txt
df_copy.shape

df_copy.dropna()
df_copy.info

import os
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import itertools
import collections
import tweepy as tw
import nltk
from nltk.corpus import stopwords
import re
import networkx
from textblob import TextBlob
import warnings
warnings.filterwarnings("ignore")
sns.set(font_scale=1.5)
sns.set_style("whitegrid")

type(df_copy['Text'])

tweets=df_copy['Text'].to_list()
#tweets

# Create textblob objects of the tweets
sentiment_objects = [TextBlob(tweet) for tweet in tweets]
sentiment_objects
sentiment_objects[1].polarity, sentiment_objects[1]
# Create list of polarity values and tweet text
sentiment_values = [[tweet.sentiment.polarity, str(tweet)] for tweet in sentiment_objects]
#sentiment_values = [[tweet.sentiment.polarity,tweet.sentiment.subjectivity,str(tweet)] for tweet in sentiment_objects]
# Create dataframe containing the polarity value and tweet text
#sentiment_df = pd.DataFrame(sentiment_values, columns=["polarity",'subjectivity',"tweet"])
sentiment_df = pd.DataFrame(sentiment_values, columns=["polarity","tweet"])
sentiment_df.loc[sentiment_df['polarity']==0,'sentiment']=0
sentiment_df.loc[sentiment_df['polarity']<0,'sentiment']=-1
sentiment_df.loc[sentiment_df['polarity']>0,'sentiment']=1
#new1=df_copy
df_copy['sentiment']=sentiment_df['sentiment']
df_copy['polarity']=sentiment_df['polarity']
df_copy=df_copy.dropna()
df_copy['sentiment']=df_copy['sentiment'].astype(int)

"""These polarity values can be plotted in a histogram, which can help to highlight in the overall sentiment (i.e. more positivity or negativity) toward the subject."""

fig, ax = plt.subplots(figsize=(8, 6))
# Plot histogram of the polarity values
sentiment_df.hist(bins=[-1, -0.75, -0.5, -0.25, 0.25, 0.5, 0.75, 1],
             ax=ax,
             color="purple")
plt.title("Sentiments from Tweets on stock data")
plt.show()

df_copy

new=df_copy[['Date','polarity']]

new

#add a label
new['Symbol']="Apple"
#new['Polarity']=new3['polarity']
# It is stored in the data folder.
# Write DataFrame to CSV
new.to_csv('AAPL_grouped_sentiment_double_singleday.csv', index=False)
new